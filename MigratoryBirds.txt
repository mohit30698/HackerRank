import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {

    // Complete the migratoryBirds function below.
    static int migratoryBirds(List<Integer> arr) {
        int c1 = 0, c2 = 0, c3 = 0, c4 = 0, c5 = 0, id = 0, max = 0;
        
        for (int type : arr) {
            if (type == 1)
                c1++;
            else if (type == 2)
                c2++;
            else if (type == 3)
                c3++;
            else if (type == 4)
                c4++;
            else if (type == 5)
                c5++;
        }
        
        System.err.println(c1 + " " + c2 + " " + c3 + " " + c4 + " " + c5);
        
        if (c5 >= max) {
            max = c5;
            id = 5;
        }
        if (c4 >= max) {
            max = c4;
            id = 4;
        }
        if (c3 >= max) {
            max = c3;
            id = 3;
        }
        if (c2 >= max) {
            max = c2;
            id = 2;
        }
        if (c1 >= max) {
            max = c1;
            id = 1;
        }
            
        return id;
    }
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
